Notes from DynamoDB Course

DynamoDB is a fast, flexible, cost effective, highly scalable, fault tolerant and secure, serverless cloud NoSQL database fully-managed by AWS.

DynamoDB Tables and Naming Conventions
prefix_tablename
ex: test_users, staging_users

Data types in DynamoDB
- Scalar types
  - Exactly one value
  - eg: string, number, binary, boolean, and null
  - keys or index attributes only support string, number and binary scalar types
- Set types
  - Multiple scalar values
  - eg: string set, number set and binary set
- Document types
  - Complex structure with nested attributes
  - eg: list and map
  
DynamoDB Consistency Model
  - Strong consistency
    The most up-to-date data
    Must be requested explicitly
    
  - Eventual Consistency
    May or may not reflect the latest copy of data
    Default consistency for all operations
    50% cheaper

DynamoDB Capacity Units
Tables in DynamoDB must be configured with the throughput capacity. 
  Allows for predictable performance at scale. 
  Used to control read/write throughput
  Supports auto-scaling
  Defined using RCUs and WCUs
  Major factor in DynamoDB pricing
  1 capacity unit = 1 request/sec
    RCUs
    1 RCU = 1 strongly consistent table read/sec
    1 RCU = 2 eventually consistent table read/sec
    In blocks of 4KB
    
    WCUs
    1 WCU = 1 table write/sec
    In blocks of 1KB
    
    Example
    RCUs to read 10KB of data per second with strong consistency = 10KB/4KB = 2.5 ~ 3 RCUs
    WCUs to write 10KB of data per second = 10KB/1KB = 10WCUs
    
    Scaling
    Scaling Up: As and when needed
    Scaling Down: Up to 4 times in a day
    1 partition supports up to 1000 WCUs or 3000 RCUs
    
